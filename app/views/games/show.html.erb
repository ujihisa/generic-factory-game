<%- case @game.status %>
<%- when :game_over %>
  <h1 class='display-3 jumbotron'>
    <font color=red>
      ðŸ’¸ðŸ’€ðŸ’¸ GAME OVER
    </font>
  </h1>
  <%- if @game.mode == 'tutorial' %>
    <div class="container" style='max-width: 480px;'>
      <div class="card-deck mb-3 text-center">
        <div class="card mb-4 shadow-sm" style='min-width: 220px;'>
          <div class="card-header">
            <h4 class="my-0 font-weight-normal">
              Let's try again
            </h4>
          </div>
          <div class="card-body">
            <%= form_with(url: games_path, method: :post) do |form| %>
              <%= hidden_field_tag :'game[player_id]', @game.player.id %>
              <%= hidden_field_tag :'game[mode]', 'tutorial' %>
              <%= form.submit "Start game (Tutorial)", class: 'btn btn-lg btn-block btn-secondary' %>
            <% end %>
          </div>
        </div>
      </div>
    </div>
    <hr />
  <%- elsif 3 <= @game.month %>
    <%= render 'stats' %>
  <%- else %>
    <div class="alert alert-primary" role="alert">
      (Charts will be shown here if you survive longer than 3 months.)
    </div>
  <%- end %>
<%- when :completed %>
  <h1 class='display-3 jumbotron'>
    ðŸŽ‰ Game Clear!
  </h1>

  <%- case @game.mode %>
  <%- when 'tutorial' %>
    <div class="container" style='max-width: 480px;'>
      <div class="card-deck mb-3 text-center">
        <div class="card mb-4 shadow-sm" style='min-width: 220px;'>
          <div class="card-header">
            <h4 class="my-0 font-weight-normal">
              Let's try an actual game!
            </h4>
          </div>
          <div class="card-body">
            <%= form_with(url: games_path, method: :post) do |form| %>
              <%= hidden_field_tag :'game[player_id]', @game.player.id %>
              <%= hidden_field_tag :'game[mode]', 'easy' %>
              <%= form.submit "Start game (EASY MODE)", class: 'btn btn-lg btn-block btn-primary' %>
            <% end %>
          </div>
        </div>
      </div>
    </div>
    <hr />
  <%- when 'easy' %>
    <%- if @game.player.user == current_user %>
      <div class="container" style='max-width: 480px;'>
        <div class="card-deck mb-3 text-center">
          <div class="card mb-4 shadow-sm" style='min-width: 220px;'>
            <div class="card-header">
              <h4 class="my-0 font-weight-normal">
                Let's try normal mode
              </h4>
            </div>
            <div class="card-body">
              <%= form_with(url: games_path, method: :post) do |form| %>
                <%= hidden_field_tag :'game[player_id]', @game.player.id %>
                <%= hidden_field_tag :'game[mode]', 'normal' %>
                <%= form.submit "Start game (Normal)", class: 'btn btn-lg btn-block btn-primary' %>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    <%- end %>
    <%= render 'stats' %>
    <hr />
  <%- else # normal %>
    <%- if current_user && current_user.player.completed?(@game.version, 'normal') %>
      <%= render 'stats' %>
    <%- else %>
      You can see the stats details only if you complete a <%= @game.version %> normal game!
    <%- end %>
  <%- end %>
<%- end %>


<div class="row">
  <div class="col-md-9 themed-grid-col">
    <%= react_component('GamePane', {
      status: @game.status,
      cash: @game.cash,
      debt: @game.debt,
      credit: @game.credit,
      storage: @game.storage,
      ingredientSubscription: @game.ingredient_subscription,
      action: borrow_money_game_url,
      formAuthenticityToken: form_authenticity_token,
      subscribe_ingredients_game_url: subscribe_ingredients_game_url,
      end_month_game_url: end_month_game_url,
      estimate_status: @estimate.status,
      create_storages_game_url: create_storages_game_url,
      month: @game.month,
      ingredient: @game.ingredient,
      product: @game.product,
      quality: @game.quality,
      createContractUrl: contracts_create_game_path(@game.id),
      cancelContractUrl: contracts_cancel_game_path(@game.id),
      contractDump: Contract.dump(@game.mode),
      signedContracts: @game.signed_contracts.as_json,
      buy_ingredients_game_url: buy_ingredients_game_url,
      notice: notice,
      alert: alert,
      productionVolume: @game.capped_production,
      productionQuality: @game.factory.production_quality,
      equipments: @game.equipments,
      employees: Assignment.employee_groups_with_num_hired(@game.assignments),
      employeeGroups: @game.employee_groups,
      hire_game_path: hire_game_path,
      factory_assign_game_path: factory_assign_game_path,
      factory_buyinstall_game_path: factory_buyinstall_game_path,
      advertise_game_path: advertise_game_path,
      productRequiredNextMonth: @game.signed_contracts.product_required(@game.next_month),
      allEquipments: Factory::EQUIPMENTS.select {|_, v| v[:modes].include?(@game.mode) },
      assignmentsSummary: EmployeeGroup::ALL.values.map(&:category).uniq.map {|category|
        {
          name: category,
          numRoles: {
            produce: @game.assignments.select { _1.employee_group.category == category && _1.role == :produce }.sum(&:num),
            mentor: @game.assignments.select { _1.employee_group.category == category && _1.role == :mentor }.sum(&:num),
            # kaizen: @game.assignments.select { _1.employee_group.category == category && _1.role == :kaizen }.sum(&:num),
          }
        }
      },
      minCashForNextMonth: -@estimate.cash,
      mode: @game.mode,
      darklaunch: {
        'enable-bank-client-side-adjuetment-buttons': Darklaunch.v1_variation('enable-bank-client-side-adjuetment-buttons', @game.player),
      },
      # assignmentsSummary: @game.assignments.each_with_object([]) {|a, memo|
      #   if x = memo.find {|x| x[:name] == a.employee_group_name }
      #     x[:numRoles][a.role] = a.num
      #   else
      #     memo << { name: a.employee_group_name, numRoles: { a.role => a.num } }
      #   end
      # }.sort_by { [:Junior, :Intermediate, :Senior].index(_1[:name]) }
    }) %>

    <%- if Rails.env.development? %>
      <%- if @game_hint %>
        <h2>Game hint</h5>
        <div>
            <p><%= @game_hint[:fact] %></p>
            <p><%= @game_hint[:suggestion] %></p>
        </div>
      <%- end %>
    <%- end %>
  </div>
  <div class="col-md-3 themed-grid-col">
  <h2>Calendar</h2>
  <h5><%= @game.current_month %> <%= 2020 + @game.month / 12 %> result</h5>
  <ul>
    <%- @game.alerts.each do |alert| %>
      <li class="alert alert-danger" role="alert"/><%= alert %>
    <%- end %>
    <%- @game.messages.each do |message| %>
      <li /><%= message %>
    <%- end %>
  </ul>
  <h5><%= @estimate.current_month %> <%= 2020 + @estimate.month / 12 %> estimate</h5>
  <ul>
    <%- @estimate.alerts.each do |alert| %>
      <li class="alert alert-danger" role="alert"/><%= alert %>
    <%- end %>
    <%- @estimate.messages.each do |message| %>
      <li class="text-muted"/><%= message %>
    <%- end %>
  </ul>

  <hr>
  <%- if notice %>
    <p id="notice">
    ðŸ†•
    <%= notice %>
    </p>
  <%- end %>

      <h3>Factory</h3>
      <!--
        Estimated Ingredients Consumption: <%= @game.factory.production_volume / Game::INGREDIENT2PRODUCT %>t
        <%- if @game.factory.production_volume != @game.capped_production %>
          <ul>
            <li><font color=red>(Capped to <%= @game.capped_production / Game::INGREDIENT2PRODUCT %>t, because you don't have much ingredients!)</font>
          </ul>
        <%- end %>
      -->
      Estimated Product Generation: <%= @game.factory.production_volume %>t
      <%- if @game.factory.production_volume != @game.capped_production %>
        <ul>
          <li><font color=red>(Capped to <%= @game.capped_production %>t, because you don't have enough ingredients!)</font>
        </ul>
      <%- end %>
      <br/>
  </div>
</div>
<%- if Rails.env.development? %>
  <hr>
  <div align="right">
    <h2>DEVELOPMENT</h2>
    <%= form_with(url: force_change_game_url, method: 'post') do |form| %>
      Cash: <%= form.text_field :cash, value: @game.cash %><br/>
      Money: <%= form.text_field :money, value: @game.money %><br/>
      Credit: <%= form.text_field :credit, value: @game.credit %><br/>
      Storage: <%= form.text_field :storage, value: @game.storage %><br/>
      Product: <%= form.text_field :product, value: @game.product %><br/>
      Quality: <%= form.text_field :quality, value: @game.quality %><br/>
      Ingredient: <%= form.text_field :ingredient, value: @game.ingredient %><br/>
      <%= form.submit %>
    <%- end %>
  </div>
  <dl>
    <dd>Assignments:</dd>
    <dt><code><%= @game.assignments_raw %></code></dt>

    <dd>Employee groups:</dd>
    <dt><code><%= @game.employee_groups_raw %></code></dt>
  </dl>
<%- end %>
